/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_bitquill_ocr_image_GrayImage */

#ifndef _Included_net_bitquill_ocr_image_GrayImage
#define _Included_net_bitquill_ocr_image_GrayImage
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeMeanFilter
 * Signature: ([B[BIII)I
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeMeanFilter
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeMin
 * Signature: ([BIIIIII)I
 */
JNIEXPORT jint JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeMin
  (JNIEnv *, jclass, jbyteArray, jint, jint, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeMax
 * Signature: ([BIIIIII)I
 */
JNIEXPORT jint JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeMax
  (JNIEnv *, jclass, jbyteArray, jint, jint, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeMean
 * Signature: ([BIIIIII)F
 */
JNIEXPORT jfloat JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeMean
  (JNIEnv *, jclass, jbyteArray, jint, jint, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeVariance
 * Signature: ([BIIIIII)F
 */
JNIEXPORT jfloat JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeVariance
  (JNIEnv *, jclass, jbyteArray, jint, jint, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeHistogram
 * Signature: ([BII[IIIII)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeHistogram
  (JNIEnv *, jclass, jbyteArray, jint, jint, jintArray, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeGrayToARGB
 * Signature: ([BII[IIII)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeGrayToARGB
  (JNIEnv *, jclass, jbyteArray, jint, jint, jintArray, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeAdaptiveThreshold
 * Signature: ([B[B[BIIBBI)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeAdaptiveThreshold
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jint, jint, jbyte, jbyte, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeContrastStretch
 * Signature: ([B[BIIBB)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeContrastStretch
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint, jbyte, jbyte);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeErode
 * Signature: ([B[BIII[I[I[IIIII)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeErode
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint,
        jint, jintArray, jintArray, jintArray, jint, jint, jint, jint);

/*
 * Class:     net_bitquill_ocr_image_GrayImage
 * Method:    nativeDilate
 * Signature: ([B[BIII[I[I[IIIII)V
 */
JNIEXPORT void JNICALL Java_net_bitquill_ocr_image_GrayImage_nativeDilate
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint,
        jint, jintArray, jintArray, jintArray, jint, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
